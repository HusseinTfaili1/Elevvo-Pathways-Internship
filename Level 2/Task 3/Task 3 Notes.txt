https://www.kaggle.com/datasets/viridianachow/online-retail-uci-dataset


Step 1: Understand Recency
Recency measures how many days have passed since a customer's last purchase.

Formula:

Recency=Reference Date−Last Purchase Date
The Reference Date is usually the most recent date in your dataset + 1 day or a date you define (e.g., today).


Correlation Heatmap Explanation:

The correlation heatmap shows how strongly the RFM metrics (Recency, Frequency, Monetary) are related. Values close to 1 or -1 indicate strong positive or negative relationships, while values near 0 mean little or no correlation.


The RFM score is calculated as follows:

Each customer is given three scores from 1 to 5:

R_Score (Recency): Customers who purchased most recently get a higher score (5 is best, 1 is worst).
F_Score (Frequency): Customers who purchased most often get a higher score (5 is best, 1 is worst).
M_Score (Monetary): Customers who spent the most get a higher score (5 is best, 1 is worst).
The scores are assigned using quantiles (splitting the data into 5 groups). If there are not enough unique values, the code automatically adjusts the binning.

The final RFM_Score is the sum of the three scores:



Here are simple marketing ideas for each RFM segment in your analysis:

VIP (RFM_Score ≥ 12):

Offer exclusive rewards, early access to new products, or special VIP-only events.
Provide personalized thank-you messages and loyalty gifts.
Loyal (RFM_Score ≥ 8):

Give loyalty discounts, referral bonuses, or points for continued purchases.
Send personalized product recommendations.
Regular (RFM_Score ≥ 5):

Offer limited-time promotions or bundle deals to encourage more frequent purchases.
Send reminders about new arrivals or seasonal sales.
At Risk (RFM_Score < 5):

Send re-engagement emails with special discounts or win-back offers.
Ask for feedback to understand why they stopped buying and address concerns.
Would you like to see how to automatically send or tag these suggestions in your DataFrame?